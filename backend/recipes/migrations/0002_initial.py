# Generated by Django 4.2.4 on 2023-08-08 19:32

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('recipes', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='recipe',
            name='author',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name='recipes',
                to=settings.AUTH_USER_MODEL,
                verbose_name='Автор',
            ),
        ),
        migrations.AddField(
            model_name='recipe',
            name='favorited_by',
            field=models.ManyToManyField(
                blank=True,
                db_table='recipes_favorited',
                related_name='favorited',
                to=settings.AUTH_USER_MODEL,
                verbose_name='В избранном у пользователей',
            ),
        ),
        migrations.AddField(
            model_name='recipe',
            name='in_shopping_cart',
            field=models.ManyToManyField(
                blank=True,
                db_table='recipes_shopping_cart',
                related_name='shopping_cart',
                to=settings.AUTH_USER_MODEL,
                verbose_name='В корзине у пользователей',
            ),
        ),
        migrations.AddField(
            model_name='recipe',
            name='ingredients',
            field=models.ManyToManyField(
                related_name='recipes',
                through='recipes.RecipeIngredient',
                to='recipes.ingredient',
                verbose_name='Список ингредиентов',
            ),
        ),
        migrations.AddField(
            model_name='recipe',
            name='tags',
            field=models.ManyToManyField(
                blank=True,
                related_name='recipes',
                to='recipes.tag',
                verbose_name='Список тегов',
            ),
        ),
        migrations.AddConstraint(
            model_name='recipeingredient',
            constraint=models.UniqueConstraint(
                fields=('recipe', 'ingredient'),
                name='unique_recipe_ingredient',
            ),
        ),
    ]
